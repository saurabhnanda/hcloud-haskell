-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation postServers_Id_ActionsAddToPlacementGroup
module HCloud.Operations.PostServersIdActionsAddToPlacementGroup where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /servers/{id}/actions/add_to_placement_group
-- 
-- Adds a Server to a Placement Group.
-- 
-- Server must be powered off for this command to succeed.
-- 
-- \#\#\#\# Call specific error codes
-- 
-- | Code                          | Description                                                          |
-- |-------------------------------|----------------------------------------------------------------------|
-- | \`server_not_stopped\`          | The action requires a stopped server                                 |
postServers_Id_ActionsAddToPlacementGroup :: forall m s . (HCloud.Common.MonadHTTP m, HCloud.Common.SecurityScheme s) => HCloud.Common.Configuration s  -- ^ The configuration to use in the request
  -> GHC.Integer.Type.Integer                                                                                                                              -- ^ id: ID of the Server
  -> GHC.Maybe.Maybe PostServersIdActionsAddToPlacementGroupRequestBody                                                                                    -- ^ The request body to send
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response PostServersIdActionsAddToPlacementGroupResponse))   -- ^ Monad containing the result of the operation
postServers_Id_ActionsAddToPlacementGroup config
                                          id
                                          body = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsAddToPlacementGroupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsAddToPlacementGroupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         PostServersIdActionsAddToPlacementGroupResponseBody201)
                                                                                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_to_placement_group"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /servers/{id}/actions/add_to_placement_group
-- 
-- The same as 'postServers_Id_ActionsAddToPlacementGroup' but returns the raw 'Data.ByteString.Char8.ByteString'
postServers_Id_ActionsAddToPlacementGroupRaw :: forall m s . (HCloud.Common.MonadHTTP m,
                                                              HCloud.Common.SecurityScheme s) =>
                                                HCloud.Common.Configuration s ->
                                                GHC.Integer.Type.Integer ->
                                                GHC.Maybe.Maybe PostServersIdActionsAddToPlacementGroupRequestBody ->
                                                m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                      (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postServers_Id_ActionsAddToPlacementGroupRaw config
                                             id
                                             body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_to_placement_group"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /servers/{id}/actions/add_to_placement_group
-- 
-- Monadic version of 'postServers_Id_ActionsAddToPlacementGroup' (use with 'HCloud.Common.runWithConfiguration')
postServers_Id_ActionsAddToPlacementGroupM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                            HCloud.Common.SecurityScheme s) =>
                                              GHC.Integer.Type.Integer ->
                                              GHC.Maybe.Maybe PostServersIdActionsAddToPlacementGroupRequestBody ->
                                              Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                 m
                                                                                 (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                     (Network.HTTP.Client.Types.Response PostServersIdActionsAddToPlacementGroupResponse))
postServers_Id_ActionsAddToPlacementGroupM id
                                           body = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsAddToPlacementGroupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsAddToPlacementGroupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          PostServersIdActionsAddToPlacementGroupResponseBody201)
                                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_to_placement_group"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /servers/{id}/actions/add_to_placement_group
-- 
-- Monadic version of 'postServers_Id_ActionsAddToPlacementGroupRaw' (use with 'HCloud.Common.runWithConfiguration')
postServers_Id_ActionsAddToPlacementGroupRawM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                               HCloud.Common.SecurityScheme s) =>
                                                 GHC.Integer.Type.Integer ->
                                                 GHC.Maybe.Maybe PostServersIdActionsAddToPlacementGroupRequestBody ->
                                                 Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                    m
                                                                                    (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                        (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postServers_Id_ActionsAddToPlacementGroupRawM id
                                              body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_to_placement_group"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the data type for the schema postServers_Id_ActionsAddToPlacementGroupRequestBody
-- 
-- 
data PostServersIdActionsAddToPlacementGroupRequestBody = PostServersIdActionsAddToPlacementGroupRequestBody {
  -- | placement_group: ID of Placement Group the Server should be added to
  postServersIdActionsAddToPlacementGroupRequestBodyPlacementGroup :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupRequestBody
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "placement_group" (postServersIdActionsAddToPlacementGroupRequestBodyPlacementGroup obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "placement_group" (postServersIdActionsAddToPlacementGroupRequestBodyPlacementGroup obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsAddToPlacementGroupRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsAddToPlacementGroupRequestBody" (\obj -> GHC.Base.pure PostServersIdActionsAddToPlacementGroupRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "placement_group"))
-- | Represents a response of the operation 'postServers_Id_ActionsAddToPlacementGroup'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostServersIdActionsAddToPlacementGroupResponseError' is used.
data PostServersIdActionsAddToPlacementGroupResponse =                                                         
   PostServersIdActionsAddToPlacementGroupResponseError GHC.Base.String                                        -- ^ Means either no matching case available or a parse error
  | PostServersIdActionsAddToPlacementGroupResponse201 PostServersIdActionsAddToPlacementGroupResponseBody201  -- ^ The \`action\` key in the reply contains an Action object with this structure
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the data type for the schema PostServersIdActionsAddToPlacementGroupResponseBody201
-- 
-- 
data PostServersIdActionsAddToPlacementGroupResponseBody201 = PostServersIdActionsAddToPlacementGroupResponseBody201 {
  -- | action
  postServersIdActionsAddToPlacementGroupResponseBody201Action :: PostServersIdActionsAddToPlacementGroupResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupResponseBody201
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "action" (postServersIdActionsAddToPlacementGroupResponseBody201Action obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "action" (postServersIdActionsAddToPlacementGroupResponseBody201Action obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsAddToPlacementGroupResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsAddToPlacementGroupResponseBody201" (\obj -> GHC.Base.pure PostServersIdActionsAddToPlacementGroupResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Defines the data type for the schema PostServersIdActionsAddToPlacementGroupResponseBody201Action
-- 
-- 
data PostServersIdActionsAddToPlacementGroupResponseBody201Action = PostServersIdActionsAddToPlacementGroupResponseBody201Action {
  -- | command: Command executed in the Action
  postServersIdActionsAddToPlacementGroupResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionError :: PostServersIdActionsAddToPlacementGroupResponseBody201ActionError
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionFinished :: Data.Text.Internal.Text
  -- | id: ID of the Resource
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionId :: GHC.Integer.Type.Integer
  -- | progress: Progress of Action in percent
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionResources :: ([] PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources)
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionStatus :: PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupResponseBody201Action
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "command" (postServersIdActionsAddToPlacementGroupResponseBody201ActionCommand obj) : (Data.Aeson..=) "error" (postServersIdActionsAddToPlacementGroupResponseBody201ActionError obj) : (Data.Aeson..=) "finished" (postServersIdActionsAddToPlacementGroupResponseBody201ActionFinished obj) : (Data.Aeson..=) "id" (postServersIdActionsAddToPlacementGroupResponseBody201ActionId obj) : (Data.Aeson..=) "progress" (postServersIdActionsAddToPlacementGroupResponseBody201ActionProgress obj) : (Data.Aeson..=) "resources" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResources obj) : (Data.Aeson..=) "started" (postServersIdActionsAddToPlacementGroupResponseBody201ActionStarted obj) : (Data.Aeson..=) "status" (postServersIdActionsAddToPlacementGroupResponseBody201ActionStatus obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "command" (postServersIdActionsAddToPlacementGroupResponseBody201ActionCommand obj) GHC.Base.<> ((Data.Aeson..=) "error" (postServersIdActionsAddToPlacementGroupResponseBody201ActionError obj) GHC.Base.<> ((Data.Aeson..=) "finished" (postServersIdActionsAddToPlacementGroupResponseBody201ActionFinished obj) GHC.Base.<> ((Data.Aeson..=) "id" (postServersIdActionsAddToPlacementGroupResponseBody201ActionId obj) GHC.Base.<> ((Data.Aeson..=) "progress" (postServersIdActionsAddToPlacementGroupResponseBody201ActionProgress obj) GHC.Base.<> ((Data.Aeson..=) "resources" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResources obj) GHC.Base.<> ((Data.Aeson..=) "started" (postServersIdActionsAddToPlacementGroupResponseBody201ActionStarted obj) GHC.Base.<> (Data.Aeson..=) "status" (postServersIdActionsAddToPlacementGroupResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsAddToPlacementGroupResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsAddToPlacementGroupResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostServersIdActionsAddToPlacementGroupResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Defines the data type for the schema PostServersIdActionsAddToPlacementGroupResponseBody201ActionError
-- 
-- Error message for the Action if error occurred, otherwise null
data PostServersIdActionsAddToPlacementGroupResponseBody201ActionError = PostServersIdActionsAddToPlacementGroupResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionError
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "code" (postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorCode obj) : (Data.Aeson..=) "message" (postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorMessage obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "code" (postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorCode obj) GHC.Base.<> (Data.Aeson..=) "message" (postServersIdActionsAddToPlacementGroupResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsAddToPlacementGroupResponseBody201ActionError" (\obj -> (GHC.Base.pure PostServersIdActionsAddToPlacementGroupResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Defines the data type for the schema PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources
-- 
-- 
data PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources = PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources {
  -- | id: ID of the Resource
  postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesId :: GHC.Integer.Type.Integer
  -- | type: Type of resource referenced
  , postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "id" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesId obj) : (Data.Aeson..=) "type" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesType obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "id" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesId obj) GHC.Base.<> (Data.Aeson..=) "type" (postServersIdActionsAddToPlacementGroupResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostServersIdActionsAddToPlacementGroupResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Defines the enum schema PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatus
-- 
-- Status of the Action
data PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatus
    = PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumOther Data.Aeson.Types.Internal.Value
    | PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumTyped Data.Text.Internal.Text
    | PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringError
    | PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringRunning
    | PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringSuccess
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatus
    where toJSON (PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringError) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error"
          toJSON (PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringRunning) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running"
          toJSON (PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringSuccess) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success"
instance Data.Aeson.FromJSON PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error")
                                          then PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringError
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running")
                                                then PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringRunning
                                                else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success")
                                                      then PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumStringSuccess
                                                      else PostServersIdActionsAddToPlacementGroupResponseBody201ActionStatusEnumOther val)
