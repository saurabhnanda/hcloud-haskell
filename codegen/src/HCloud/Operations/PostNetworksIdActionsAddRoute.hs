-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postNetworks_Id_ActionsAddRoute
module HCloud.Operations.PostNetworksIdActionsAddRoute where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /networks/{id}/actions/add_route
-- 
-- Adds a route entry to a Network.
-- 
-- Note: if the Network object changes during the request, the response will be a “conflict” error.
postNetworks_Id_ActionsAddRoute :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsAddRouteRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostNetworksIdActionsAddRouteResponse) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsAddRoute id
                                body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostNetworksIdActionsAddRouteResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostNetworksIdActionsAddRouteResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                            PostNetworksIdActionsAddRouteResponseBody201)
                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data PostNetworksIdActionsAddRouteRequestBody = PostNetworksIdActionsAddRouteRequestBody {
  -- | destination: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.
  postNetworksIdActionsAddRouteRequestBodyDestination :: Data.Text.Internal.Text
  -- | gateway: Gateway for the route. Cannot be the first IP of the networks ip_range, an IP behind a vSwitch or 172.31.1.1, as this IP is being used as a gateway for the public network interface of Servers.
  , postNetworksIdActionsAddRouteRequestBodyGateway :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("destination" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteRequestBodyDestination obj : "gateway" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteRequestBodyGateway obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("destination" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteRequestBodyDestination obj) GHC.Base.<> ("gateway" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteRequestBodyGateway obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsAddRouteRequestBody" (\obj -> (GHC.Base.pure PostNetworksIdActionsAddRouteRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "gateway"))
-- | Create a new 'PostNetworksIdActionsAddRouteRequestBody' with all required fields.
mkPostNetworksIdActionsAddRouteRequestBody :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteRequestBodyDestination'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteRequestBodyGateway'
  -> PostNetworksIdActionsAddRouteRequestBody
mkPostNetworksIdActionsAddRouteRequestBody postNetworksIdActionsAddRouteRequestBodyDestination postNetworksIdActionsAddRouteRequestBodyGateway = PostNetworksIdActionsAddRouteRequestBody{postNetworksIdActionsAddRouteRequestBodyDestination = postNetworksIdActionsAddRouteRequestBodyDestination,
                                                                                                                                                                                          postNetworksIdActionsAddRouteRequestBodyGateway = postNetworksIdActionsAddRouteRequestBodyGateway}
-- | Represents a response of the operation 'postNetworks_Id_ActionsAddRoute'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostNetworksIdActionsAddRouteResponseError' is used.
data PostNetworksIdActionsAddRouteResponse =
   PostNetworksIdActionsAddRouteResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostNetworksIdActionsAddRouteResponse201 PostNetworksIdActionsAddRouteResponseBody201 -- ^ The \`action\` key contains the \`add_route\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostNetworksIdActionsAddRouteResponseBody201 = PostNetworksIdActionsAddRouteResponseBody201 {
  -- | action
  postNetworksIdActionsAddRouteResponseBody201Action :: PostNetworksIdActionsAddRouteResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsAddRouteResponseBody201" (\obj -> GHC.Base.pure PostNetworksIdActionsAddRouteResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostNetworksIdActionsAddRouteResponseBody201' with all required fields.
mkPostNetworksIdActionsAddRouteResponseBody201 :: PostNetworksIdActionsAddRouteResponseBody201Action -- ^ 'postNetworksIdActionsAddRouteResponseBody201Action'
  -> PostNetworksIdActionsAddRouteResponseBody201
mkPostNetworksIdActionsAddRouteResponseBody201 postNetworksIdActionsAddRouteResponseBody201Action = PostNetworksIdActionsAddRouteResponseBody201{postNetworksIdActionsAddRouteResponseBody201Action = postNetworksIdActionsAddRouteResponseBody201Action}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostNetworksIdActionsAddRouteResponseBody201Action = PostNetworksIdActionsAddRouteResponseBody201Action {
  -- | command: Command executed in the Action
  postNetworksIdActionsAddRouteResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postNetworksIdActionsAddRouteResponseBody201ActionError :: (GHC.Maybe.Maybe PostNetworksIdActionsAddRouteResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postNetworksIdActionsAddRouteResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postNetworksIdActionsAddRouteResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postNetworksIdActionsAddRouteResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postNetworksIdActionsAddRouteResponseBody201ActionResources :: ([PostNetworksIdActionsAddRouteResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postNetworksIdActionsAddRouteResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postNetworksIdActionsAddRouteResponseBody201ActionStatus :: PostNetworksIdActionsAddRouteResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsAddRouteResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostNetworksIdActionsAddRouteResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostNetworksIdActionsAddRouteResponseBody201Action' with all required fields.
mkPostNetworksIdActionsAddRouteResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostNetworksIdActionsAddRouteResponseBody201ActionError -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionProgress'
  -> [PostNetworksIdActionsAddRouteResponseBody201ActionResources] -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionStarted'
  -> PostNetworksIdActionsAddRouteResponseBody201ActionStatus -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionStatus'
  -> PostNetworksIdActionsAddRouteResponseBody201Action
mkPostNetworksIdActionsAddRouteResponseBody201Action postNetworksIdActionsAddRouteResponseBody201ActionCommand postNetworksIdActionsAddRouteResponseBody201ActionError postNetworksIdActionsAddRouteResponseBody201ActionFinished postNetworksIdActionsAddRouteResponseBody201ActionId postNetworksIdActionsAddRouteResponseBody201ActionProgress postNetworksIdActionsAddRouteResponseBody201ActionResources postNetworksIdActionsAddRouteResponseBody201ActionStarted postNetworksIdActionsAddRouteResponseBody201ActionStatus = PostNetworksIdActionsAddRouteResponseBody201Action{postNetworksIdActionsAddRouteResponseBody201ActionCommand = postNetworksIdActionsAddRouteResponseBody201ActionCommand,
postNetworksIdActionsAddRouteResponseBody201ActionError = postNetworksIdActionsAddRouteResponseBody201ActionError,
postNetworksIdActionsAddRouteResponseBody201ActionFinished = postNetworksIdActionsAddRouteResponseBody201ActionFinished,
postNetworksIdActionsAddRouteResponseBody201ActionId = postNetworksIdActionsAddRouteResponseBody201ActionId,
postNetworksIdActionsAddRouteResponseBody201ActionProgress = postNetworksIdActionsAddRouteResponseBody201ActionProgress,
postNetworksIdActionsAddRouteResponseBody201ActionResources = postNetworksIdActionsAddRouteResponseBody201ActionResources,
postNetworksIdActionsAddRouteResponseBody201ActionStarted = postNetworksIdActionsAddRouteResponseBody201ActionStarted,
postNetworksIdActionsAddRouteResponseBody201ActionStatus = postNetworksIdActionsAddRouteResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostNetworksIdActionsAddRouteResponseBody201ActionError = PostNetworksIdActionsAddRouteResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postNetworksIdActionsAddRouteResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsAddRouteResponseBody201ActionError" (\obj -> (GHC.Base.pure PostNetworksIdActionsAddRouteResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostNetworksIdActionsAddRouteResponseBody201ActionError' with all required fields.
mkPostNetworksIdActionsAddRouteResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage'
  -> PostNetworksIdActionsAddRouteResponseBody201ActionError
mkPostNetworksIdActionsAddRouteResponseBody201ActionError postNetworksIdActionsAddRouteResponseBody201ActionErrorCode postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage = PostNetworksIdActionsAddRouteResponseBody201ActionError{postNetworksIdActionsAddRouteResponseBody201ActionErrorCode = postNetworksIdActionsAddRouteResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                               postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage = postNetworksIdActionsAddRouteResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostNetworksIdActionsAddRouteResponseBody201ActionResources = PostNetworksIdActionsAddRouteResponseBody201ActionResources {
  -- | id: ID of the Resource
  postNetworksIdActionsAddRouteResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postNetworksIdActionsAddRouteResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postNetworksIdActionsAddRouteResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsAddRouteResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostNetworksIdActionsAddRouteResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostNetworksIdActionsAddRouteResponseBody201ActionResources' with all required fields.
mkPostNetworksIdActionsAddRouteResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsAddRouteResponseBody201ActionResourcesType'
  -> PostNetworksIdActionsAddRouteResponseBody201ActionResources
mkPostNetworksIdActionsAddRouteResponseBody201ActionResources postNetworksIdActionsAddRouteResponseBody201ActionResourcesId postNetworksIdActionsAddRouteResponseBody201ActionResourcesType = PostNetworksIdActionsAddRouteResponseBody201ActionResources{postNetworksIdActionsAddRouteResponseBody201ActionResourcesId = postNetworksIdActionsAddRouteResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                          postNetworksIdActionsAddRouteResponseBody201ActionResourcesType = postNetworksIdActionsAddRouteResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/networks\/{id}\/actions\/add_route.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostNetworksIdActionsAddRouteResponseBody201ActionStatus =
   PostNetworksIdActionsAddRouteResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostNetworksIdActionsAddRouteResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsAddRouteResponseBody201ActionStatus
    where toJSON (PostNetworksIdActionsAddRouteResponseBody201ActionStatusOther val) = val
          toJSON (PostNetworksIdActionsAddRouteResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsAddRouteResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostNetworksIdActionsAddRouteResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostNetworksIdActionsAddRouteResponseBody201ActionStatusOther val)
-- | > POST /networks/{id}/actions/add_route
-- 
-- The same as 'postNetworks_Id_ActionsAddRoute' but accepts an explicit configuration.
postNetworks_Id_ActionsAddRouteWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsAddRouteRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response PostNetworksIdActionsAddRouteResponse) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsAddRouteWithConfiguration config
                                                 id
                                                 body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostNetworksIdActionsAddRouteResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostNetworksIdActionsAddRouteResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             PostNetworksIdActionsAddRouteResponseBody201)
                                                                                                                                                                                                                | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /networks/{id}/actions/add_route
-- 
-- The same as 'postNetworks_Id_ActionsAddRoute' but returns the raw 'Data.ByteString.Char8.ByteString'.
postNetworks_Id_ActionsAddRouteRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsAddRouteRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsAddRouteRaw id
                                   body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /networks/{id}/actions/add_route
-- 
-- The same as 'postNetworks_Id_ActionsAddRoute' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postNetworks_Id_ActionsAddRouteWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsAddRouteRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsAddRouteWithConfigurationRaw config
                                                    id
                                                    body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/add_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
