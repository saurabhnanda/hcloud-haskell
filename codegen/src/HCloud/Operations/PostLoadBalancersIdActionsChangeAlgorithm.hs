-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation postLoadBalancers_Id_ActionsChangeAlgorithm
module HCloud.Operations.PostLoadBalancersIdActionsChangeAlgorithm where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /load_balancers/{id}/actions/change_algorithm
-- 
-- Change the algorithm that determines to which target new requests are sent.
postLoadBalancers_Id_ActionsChangeAlgorithm :: forall m s . (HCloud.Common.MonadHTTP m, HCloud.Common.SecurityScheme s) => HCloud.Common.Configuration s  -- ^ The configuration to use in the request
  -> GHC.Integer.Type.Integer                                                                                                                                -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeAlgorithmRequestBody                                                                                    -- ^ The request body to send
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsChangeAlgorithmResponse))   -- ^ Monad containing the result of the operation
postLoadBalancers_Id_ActionsChangeAlgorithm config
                                            id
                                            body = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsChangeAlgorithmResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsChangeAlgorithmResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               PostLoadBalancersIdActionsChangeAlgorithmResponseBody201)
                                                                                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_algorithm"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/change_algorithm
-- 
-- The same as 'postLoadBalancers_Id_ActionsChangeAlgorithm' but returns the raw 'Data.ByteString.Char8.ByteString'
postLoadBalancers_Id_ActionsChangeAlgorithmRaw :: forall m s . (HCloud.Common.MonadHTTP m,
                                                                HCloud.Common.SecurityScheme s) =>
                                                  HCloud.Common.Configuration s ->
                                                  GHC.Integer.Type.Integer ->
                                                  GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeAlgorithmRequestBody ->
                                                  m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                        (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postLoadBalancers_Id_ActionsChangeAlgorithmRaw config
                                               id
                                               body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_algorithm"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/change_algorithm
-- 
-- Monadic version of 'postLoadBalancers_Id_ActionsChangeAlgorithm' (use with 'HCloud.Common.runWithConfiguration')
postLoadBalancers_Id_ActionsChangeAlgorithmM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                              HCloud.Common.SecurityScheme s) =>
                                                GHC.Integer.Type.Integer ->
                                                GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeAlgorithmRequestBody ->
                                                Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                   m
                                                                                   (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                       (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsChangeAlgorithmResponse))
postLoadBalancers_Id_ActionsChangeAlgorithmM id
                                             body = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsChangeAlgorithmResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsChangeAlgorithmResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                PostLoadBalancersIdActionsChangeAlgorithmResponseBody201)
                                                                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_algorithm"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/change_algorithm
-- 
-- Monadic version of 'postLoadBalancers_Id_ActionsChangeAlgorithmRaw' (use with 'HCloud.Common.runWithConfiguration')
postLoadBalancers_Id_ActionsChangeAlgorithmRawM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                                 HCloud.Common.SecurityScheme s) =>
                                                   GHC.Integer.Type.Integer ->
                                                   GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeAlgorithmRequestBody ->
                                                   Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                      m
                                                                                      (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                          (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postLoadBalancers_Id_ActionsChangeAlgorithmRawM id
                                                body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_algorithm"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the data type for the schema postLoadBalancers_Id_ActionsChangeAlgorithmRequestBody
-- 
-- 
data PostLoadBalancersIdActionsChangeAlgorithmRequestBody = PostLoadBalancersIdActionsChangeAlgorithmRequestBody {
  -- | type: Algorithm of the Load Balancer
  postLoadBalancersIdActionsChangeAlgorithmRequestBodyType :: PostLoadBalancersIdActionsChangeAlgorithmRequestBodyType
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmRequestBody
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "type" (postLoadBalancersIdActionsChangeAlgorithmRequestBodyType obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "type" (postLoadBalancersIdActionsChangeAlgorithmRequestBodyType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeAlgorithmRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeAlgorithmRequestBody" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsChangeAlgorithmRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Defines the enum schema postLoadBalancers_Id_ActionsChangeAlgorithmRequestBodyType
-- 
-- Algorithm of the Load Balancer
data PostLoadBalancersIdActionsChangeAlgorithmRequestBodyType
    = PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumOther Data.Aeson.Types.Internal.Value
    | PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumTyped Data.Text.Internal.Text
    | PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringLeastConnections
    | PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringRoundRobin
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmRequestBodyType
    where toJSON (PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringLeastConnections) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "least_connections"
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringRoundRobin) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "round_robin"
instance Data.Aeson.FromJSON PostLoadBalancersIdActionsChangeAlgorithmRequestBodyType
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "least_connections")
                                          then PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringLeastConnections
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "round_robin")
                                                then PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumStringRoundRobin
                                                else PostLoadBalancersIdActionsChangeAlgorithmRequestBodyTypeEnumOther val)
-- | Represents a response of the operation 'postLoadBalancers_Id_ActionsChangeAlgorithm'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostLoadBalancersIdActionsChangeAlgorithmResponseError' is used.
data PostLoadBalancersIdActionsChangeAlgorithmResponse =                                                           
   PostLoadBalancersIdActionsChangeAlgorithmResponseError GHC.Base.String                                          -- ^ Means either no matching case available or a parse error
  | PostLoadBalancersIdActionsChangeAlgorithmResponse201 PostLoadBalancersIdActionsChangeAlgorithmResponseBody201  -- ^ The \`action\` key contains the \`change_algorithm\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the data type for the schema PostLoadBalancersIdActionsChangeAlgorithmResponseBody201
-- 
-- 
data PostLoadBalancersIdActionsChangeAlgorithmResponseBody201 = PostLoadBalancersIdActionsChangeAlgorithmResponseBody201 {
  -- | action
  postLoadBalancersIdActionsChangeAlgorithmResponseBody201Action :: PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "action" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201Action obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "action" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201Action obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeAlgorithmResponseBody201" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsChangeAlgorithmResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action
-- 
-- 
data PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action = PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action {
  -- | command: Command executed in the Action
  postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError :: PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionFinished :: Data.Text.Internal.Text
  -- | id: ID of the Resource
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionId :: GHC.Integer.Type.Integer
  -- | progress: Progress of Action in percent
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources :: ([] PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources)
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus :: PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "command" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionCommand obj) : (Data.Aeson..=) "error" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError obj) : (Data.Aeson..=) "finished" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionFinished obj) : (Data.Aeson..=) "id" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionId obj) : (Data.Aeson..=) "progress" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionProgress obj) : (Data.Aeson..=) "resources" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources obj) : (Data.Aeson..=) "started" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStarted obj) : (Data.Aeson..=) "status" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "command" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionCommand obj) GHC.Base.<> ((Data.Aeson..=) "error" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError obj) GHC.Base.<> ((Data.Aeson..=) "finished" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionFinished obj) GHC.Base.<> ((Data.Aeson..=) "id" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionId obj) GHC.Base.<> ((Data.Aeson..=) "progress" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionProgress obj) GHC.Base.<> ((Data.Aeson..=) "resources" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources obj) GHC.Base.<> ((Data.Aeson..=) "started" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStarted obj) GHC.Base.<> (Data.Aeson..=) "status" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostLoadBalancersIdActionsChangeAlgorithmResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError
-- 
-- Error message for the Action if error occurred, otherwise null
data PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError = PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "code" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorCode obj) : (Data.Aeson..=) "message" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorMessage obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "code" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorCode obj) GHC.Base.<> (Data.Aeson..=) "message" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources
-- 
-- 
data PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources = PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources {
  -- | id: ID of the Resource
  postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesId :: GHC.Integer.Type.Integer
  -- | type: Type of resource referenced
  , postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "id" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesId obj) : (Data.Aeson..=) "type" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesType obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "id" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesId obj) GHC.Base.<> (Data.Aeson..=) "type" (postLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Defines the enum schema PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus
-- 
-- Status of the Action
data PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus
    = PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumOther Data.Aeson.Types.Internal.Value
    | PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumTyped Data.Text.Internal.Text
    | PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringError
    | PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringRunning
    | PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringSuccess
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus
    where toJSON (PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringError) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error"
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringRunning) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running"
          toJSON (PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringSuccess) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success"
instance Data.Aeson.FromJSON PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error")
                                          then PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringError
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running")
                                                then PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringRunning
                                                else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success")
                                                      then PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumStringSuccess
                                                      else PostLoadBalancersIdActionsChangeAlgorithmResponseBody201ActionStatusEnumOther val)
