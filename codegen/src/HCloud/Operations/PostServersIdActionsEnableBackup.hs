-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postServers_Id_ActionsEnableBackup
module HCloud.Operations.PostServersIdActionsEnableBackup where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /servers/{id}/actions/enable_backup
-- 
-- Enables and configures the automatic daily backup option for the Server. Enabling automatic backups will increase the price of the Server by 20%. In return, you will get seven slots where Images of type backup can be stored.
-- 
-- Backups are automatically created daily.
postServers_Id_ActionsEnableBackup :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostServersIdActionsEnableBackupResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsEnableBackup id = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsEnableBackupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsEnableBackupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   PostServersIdActionsEnableBackupResponseBody201)
                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/enable_backup"))) GHC.Base.mempty)
-- | Represents a response of the operation 'postServers_Id_ActionsEnableBackup'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostServersIdActionsEnableBackupResponseError' is used.
data PostServersIdActionsEnableBackupResponse =
   PostServersIdActionsEnableBackupResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostServersIdActionsEnableBackupResponse201 PostServersIdActionsEnableBackupResponseBody201 -- ^ The \`action\` key in the reply contains an Action object with this structure
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/enable_backup.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostServersIdActionsEnableBackupResponseBody201 = PostServersIdActionsEnableBackupResponseBody201 {
  -- | action
  postServersIdActionsEnableBackupResponseBody201Action :: PostServersIdActionsEnableBackupResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsEnableBackupResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsEnableBackupResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsEnableBackupResponseBody201" (\obj -> GHC.Base.pure PostServersIdActionsEnableBackupResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostServersIdActionsEnableBackupResponseBody201' with all required fields.
mkPostServersIdActionsEnableBackupResponseBody201 :: PostServersIdActionsEnableBackupResponseBody201Action -- ^ 'postServersIdActionsEnableBackupResponseBody201Action'
  -> PostServersIdActionsEnableBackupResponseBody201
mkPostServersIdActionsEnableBackupResponseBody201 postServersIdActionsEnableBackupResponseBody201Action = PostServersIdActionsEnableBackupResponseBody201{postServersIdActionsEnableBackupResponseBody201Action = postServersIdActionsEnableBackupResponseBody201Action}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/enable_backup.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostServersIdActionsEnableBackupResponseBody201Action = PostServersIdActionsEnableBackupResponseBody201Action {
  -- | command: Command executed in the Action
  postServersIdActionsEnableBackupResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postServersIdActionsEnableBackupResponseBody201ActionError :: (GHC.Maybe.Maybe PostServersIdActionsEnableBackupResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postServersIdActionsEnableBackupResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postServersIdActionsEnableBackupResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postServersIdActionsEnableBackupResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postServersIdActionsEnableBackupResponseBody201ActionResources :: ([PostServersIdActionsEnableBackupResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postServersIdActionsEnableBackupResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postServersIdActionsEnableBackupResponseBody201ActionStatus :: PostServersIdActionsEnableBackupResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsEnableBackupResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsEnableBackupResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsEnableBackupResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostServersIdActionsEnableBackupResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostServersIdActionsEnableBackupResponseBody201Action' with all required fields.
mkPostServersIdActionsEnableBackupResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostServersIdActionsEnableBackupResponseBody201ActionError -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionProgress'
  -> [PostServersIdActionsEnableBackupResponseBody201ActionResources] -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionStarted'
  -> PostServersIdActionsEnableBackupResponseBody201ActionStatus -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionStatus'
  -> PostServersIdActionsEnableBackupResponseBody201Action
mkPostServersIdActionsEnableBackupResponseBody201Action postServersIdActionsEnableBackupResponseBody201ActionCommand postServersIdActionsEnableBackupResponseBody201ActionError postServersIdActionsEnableBackupResponseBody201ActionFinished postServersIdActionsEnableBackupResponseBody201ActionId postServersIdActionsEnableBackupResponseBody201ActionProgress postServersIdActionsEnableBackupResponseBody201ActionResources postServersIdActionsEnableBackupResponseBody201ActionStarted postServersIdActionsEnableBackupResponseBody201ActionStatus = PostServersIdActionsEnableBackupResponseBody201Action{postServersIdActionsEnableBackupResponseBody201ActionCommand = postServersIdActionsEnableBackupResponseBody201ActionCommand,
postServersIdActionsEnableBackupResponseBody201ActionError = postServersIdActionsEnableBackupResponseBody201ActionError,
postServersIdActionsEnableBackupResponseBody201ActionFinished = postServersIdActionsEnableBackupResponseBody201ActionFinished,
postServersIdActionsEnableBackupResponseBody201ActionId = postServersIdActionsEnableBackupResponseBody201ActionId,
postServersIdActionsEnableBackupResponseBody201ActionProgress = postServersIdActionsEnableBackupResponseBody201ActionProgress,
postServersIdActionsEnableBackupResponseBody201ActionResources = postServersIdActionsEnableBackupResponseBody201ActionResources,
postServersIdActionsEnableBackupResponseBody201ActionStarted = postServersIdActionsEnableBackupResponseBody201ActionStarted,
postServersIdActionsEnableBackupResponseBody201ActionStatus = postServersIdActionsEnableBackupResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/enable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostServersIdActionsEnableBackupResponseBody201ActionError = PostServersIdActionsEnableBackupResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postServersIdActionsEnableBackupResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postServersIdActionsEnableBackupResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsEnableBackupResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsEnableBackupResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsEnableBackupResponseBody201ActionError" (\obj -> (GHC.Base.pure PostServersIdActionsEnableBackupResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostServersIdActionsEnableBackupResponseBody201ActionError' with all required fields.
mkPostServersIdActionsEnableBackupResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionErrorMessage'
  -> PostServersIdActionsEnableBackupResponseBody201ActionError
mkPostServersIdActionsEnableBackupResponseBody201ActionError postServersIdActionsEnableBackupResponseBody201ActionErrorCode postServersIdActionsEnableBackupResponseBody201ActionErrorMessage = PostServersIdActionsEnableBackupResponseBody201ActionError{postServersIdActionsEnableBackupResponseBody201ActionErrorCode = postServersIdActionsEnableBackupResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                                           postServersIdActionsEnableBackupResponseBody201ActionErrorMessage = postServersIdActionsEnableBackupResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/enable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostServersIdActionsEnableBackupResponseBody201ActionResources = PostServersIdActionsEnableBackupResponseBody201ActionResources {
  -- | id: ID of the Resource
  postServersIdActionsEnableBackupResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postServersIdActionsEnableBackupResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsEnableBackupResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postServersIdActionsEnableBackupResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsEnableBackupResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsEnableBackupResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostServersIdActionsEnableBackupResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostServersIdActionsEnableBackupResponseBody201ActionResources' with all required fields.
mkPostServersIdActionsEnableBackupResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsEnableBackupResponseBody201ActionResourcesType'
  -> PostServersIdActionsEnableBackupResponseBody201ActionResources
mkPostServersIdActionsEnableBackupResponseBody201ActionResources postServersIdActionsEnableBackupResponseBody201ActionResourcesId postServersIdActionsEnableBackupResponseBody201ActionResourcesType = PostServersIdActionsEnableBackupResponseBody201ActionResources{postServersIdActionsEnableBackupResponseBody201ActionResourcesId = postServersIdActionsEnableBackupResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                                      postServersIdActionsEnableBackupResponseBody201ActionResourcesType = postServersIdActionsEnableBackupResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/servers\/{id}\/actions\/enable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostServersIdActionsEnableBackupResponseBody201ActionStatus =
   PostServersIdActionsEnableBackupResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostServersIdActionsEnableBackupResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsEnableBackupResponseBody201ActionStatus
    where toJSON (PostServersIdActionsEnableBackupResponseBody201ActionStatusOther val) = val
          toJSON (PostServersIdActionsEnableBackupResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsEnableBackupResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostServersIdActionsEnableBackupResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostServersIdActionsEnableBackupResponseBody201ActionStatusOther val)
-- | > POST /servers/{id}/actions/enable_backup
-- 
-- The same as 'postServers_Id_ActionsEnableBackup' but accepts an explicit configuration.
postServers_Id_ActionsEnableBackupWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response PostServersIdActionsEnableBackupResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsEnableBackupWithConfiguration config
                                                    id = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsEnableBackupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsEnableBackupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostServersIdActionsEnableBackupResponseBody201)
                                                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/enable_backup"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/enable_backup
-- 
-- The same as 'postServers_Id_ActionsEnableBackup' but returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsEnableBackupRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsEnableBackupRaw id = GHC.Base.id (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/enable_backup"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/enable_backup
-- 
-- The same as 'postServers_Id_ActionsEnableBackup' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsEnableBackupWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsEnableBackupWithConfigurationRaw config
                                                       id = GHC.Base.id (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/enable_backup"))) GHC.Base.mempty)
