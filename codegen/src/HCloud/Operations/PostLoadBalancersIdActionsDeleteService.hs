-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation postLoadBalancers_Id_ActionsDeleteService
module HCloud.Operations.PostLoadBalancersIdActionsDeleteService where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /load_balancers/{id}/actions/delete_service
-- 
-- Delete a service of a Load Balancer.
postLoadBalancers_Id_ActionsDeleteService :: forall m s . (HCloud.Common.MonadHTTP m, HCloud.Common.SecurityScheme s) => HCloud.Common.Configuration s  -- ^ The configuration to use in the request
  -> GHC.Integer.Type.Integer                                                                                                                              -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsDeleteServiceRequestBody                                                                                    -- ^ The request body to send
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsDeleteServiceResponse))   -- ^ Monad containing the result of the operation
postLoadBalancers_Id_ActionsDeleteService config
                                          id
                                          body = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsDeleteServiceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsDeleteServiceResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         PostLoadBalancersIdActionsDeleteServiceResponseBody201)
                                                                                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_service"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/delete_service
-- 
-- The same as 'postLoadBalancers_Id_ActionsDeleteService' but returns the raw 'Data.ByteString.Char8.ByteString'
postLoadBalancers_Id_ActionsDeleteServiceRaw :: forall m s . (HCloud.Common.MonadHTTP m,
                                                              HCloud.Common.SecurityScheme s) =>
                                                HCloud.Common.Configuration s ->
                                                GHC.Integer.Type.Integer ->
                                                GHC.Maybe.Maybe PostLoadBalancersIdActionsDeleteServiceRequestBody ->
                                                m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                      (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postLoadBalancers_Id_ActionsDeleteServiceRaw config
                                             id
                                             body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_service"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/delete_service
-- 
-- Monadic version of 'postLoadBalancers_Id_ActionsDeleteService' (use with 'HCloud.Common.runWithConfiguration')
postLoadBalancers_Id_ActionsDeleteServiceM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                            HCloud.Common.SecurityScheme s) =>
                                              GHC.Integer.Type.Integer ->
                                              GHC.Maybe.Maybe PostLoadBalancersIdActionsDeleteServiceRequestBody ->
                                              Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                 m
                                                                                 (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                     (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsDeleteServiceResponse))
postLoadBalancers_Id_ActionsDeleteServiceM id
                                           body = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsDeleteServiceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsDeleteServiceResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          PostLoadBalancersIdActionsDeleteServiceResponseBody201)
                                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_service"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/delete_service
-- 
-- Monadic version of 'postLoadBalancers_Id_ActionsDeleteServiceRaw' (use with 'HCloud.Common.runWithConfiguration')
postLoadBalancers_Id_ActionsDeleteServiceRawM :: forall m s . (HCloud.Common.MonadHTTP m,
                                                               HCloud.Common.SecurityScheme s) =>
                                                 GHC.Integer.Type.Integer ->
                                                 GHC.Maybe.Maybe PostLoadBalancersIdActionsDeleteServiceRequestBody ->
                                                 Control.Monad.Trans.Reader.ReaderT (HCloud.Common.Configuration s)
                                                                                    m
                                                                                    (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                                        (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
postLoadBalancers_Id_ActionsDeleteServiceRawM id
                                              body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_service"))) [] body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the data type for the schema postLoadBalancers_Id_ActionsDeleteServiceRequestBody
-- 
-- 
data PostLoadBalancersIdActionsDeleteServiceRequestBody = PostLoadBalancersIdActionsDeleteServiceRequestBody {
  -- | listen_port: The listen port of the service you want to delete
  postLoadBalancersIdActionsDeleteServiceRequestBodyListenPort :: GHC.Types.Double
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceRequestBody
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "listen_port" (postLoadBalancersIdActionsDeleteServiceRequestBodyListenPort obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "listen_port" (postLoadBalancersIdActionsDeleteServiceRequestBodyListenPort obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsDeleteServiceRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsDeleteServiceRequestBody" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsDeleteServiceRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listen_port"))
-- | Represents a response of the operation 'postLoadBalancers_Id_ActionsDeleteService'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostLoadBalancersIdActionsDeleteServiceResponseError' is used.
data PostLoadBalancersIdActionsDeleteServiceResponse =                                                         
   PostLoadBalancersIdActionsDeleteServiceResponseError GHC.Base.String                                        -- ^ Means either no matching case available or a parse error
  | PostLoadBalancersIdActionsDeleteServiceResponse201 PostLoadBalancersIdActionsDeleteServiceResponseBody201  -- ^ The \`action\` key contains the \`delete_service\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the data type for the schema PostLoadBalancersIdActionsDeleteServiceResponseBody201
-- 
-- 
data PostLoadBalancersIdActionsDeleteServiceResponseBody201 = PostLoadBalancersIdActionsDeleteServiceResponseBody201 {
  -- | action
  postLoadBalancersIdActionsDeleteServiceResponseBody201Action :: PostLoadBalancersIdActionsDeleteServiceResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "action" (postLoadBalancersIdActionsDeleteServiceResponseBody201Action obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "action" (postLoadBalancersIdActionsDeleteServiceResponseBody201Action obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsDeleteServiceResponseBody201" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsDeleteServiceResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsDeleteServiceResponseBody201Action
-- 
-- 
data PostLoadBalancersIdActionsDeleteServiceResponseBody201Action = PostLoadBalancersIdActionsDeleteServiceResponseBody201Action {
  -- | command: Command executed in the Action
  postLoadBalancersIdActionsDeleteServiceResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionError :: PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionFinished :: Data.Text.Internal.Text
  -- | id: ID of the Resource
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionId :: GHC.Integer.Type.Integer
  -- | progress: Progress of Action in percent
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources :: ([] PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources)
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus :: PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201Action
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "command" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionCommand obj) : (Data.Aeson..=) "error" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionError obj) : (Data.Aeson..=) "finished" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionFinished obj) : (Data.Aeson..=) "id" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionId obj) : (Data.Aeson..=) "progress" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionProgress obj) : (Data.Aeson..=) "resources" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources obj) : (Data.Aeson..=) "started" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStarted obj) : (Data.Aeson..=) "status" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "command" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionCommand obj) GHC.Base.<> ((Data.Aeson..=) "error" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionError obj) GHC.Base.<> ((Data.Aeson..=) "finished" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionFinished obj) GHC.Base.<> ((Data.Aeson..=) "id" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionId obj) GHC.Base.<> ((Data.Aeson..=) "progress" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionProgress obj) GHC.Base.<> ((Data.Aeson..=) "resources" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources obj) GHC.Base.<> ((Data.Aeson..=) "started" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStarted obj) GHC.Base.<> (Data.Aeson..=) "status" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsDeleteServiceResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostLoadBalancersIdActionsDeleteServiceResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError
-- 
-- Error message for the Action if error occurred, otherwise null
data PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError = PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "code" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorCode obj) : (Data.Aeson..=) "message" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorMessage obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "code" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorCode obj) GHC.Base.<> (Data.Aeson..=) "message" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Defines the data type for the schema PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources
-- 
-- 
data PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources = PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources {
  -- | id: ID of the Resource
  postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesId :: GHC.Integer.Type.Integer
  -- | type: Type of resource referenced
  , postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "id" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesId obj) : (Data.Aeson..=) "type" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesType obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "id" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesId obj) GHC.Base.<> (Data.Aeson..=) "type" (postLoadBalancersIdActionsDeleteServiceResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Defines the enum schema PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus
-- 
-- Status of the Action
data PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus
    = PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumOther Data.Aeson.Types.Internal.Value
    | PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumTyped Data.Text.Internal.Text
    | PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringError
    | PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringRunning
    | PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringSuccess
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus
    where toJSON (PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringError) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error"
          toJSON (PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringRunning) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running"
          toJSON (PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringSuccess) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success"
instance Data.Aeson.FromJSON PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "error")
                                          then PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringError
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "running")
                                                then PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringRunning
                                                else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "success")
                                                      then PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumStringSuccess
                                                      else PostLoadBalancersIdActionsDeleteServiceResponseBody201ActionStatusEnumOther val)
