-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postServers_Id_ActionsDisableBackup
module HCloud.Operations.PostServersIdActionsDisableBackup where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /servers/{id}/actions/disable_backup
-- 
-- Disables the automatic backup option and deletes all existing Backups for a Server. No more additional charges for backups will be made.
-- 
-- Caution: This immediately removes all existing backups for the Server!
postServers_Id_ActionsDisableBackup :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostServersIdActionsDisableBackupResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsDisableBackup id = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsDisableBackupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsDisableBackupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PostServersIdActionsDisableBackupResponseBody201)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/disable_backup"))) GHC.Base.mempty)
-- | Represents a response of the operation 'postServers_Id_ActionsDisableBackup'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostServersIdActionsDisableBackupResponseError' is used.
data PostServersIdActionsDisableBackupResponse =
   PostServersIdActionsDisableBackupResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostServersIdActionsDisableBackupResponse201 PostServersIdActionsDisableBackupResponseBody201 -- ^ The \`action\` key in the reply contains an Action object with this structure
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/disable_backup.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostServersIdActionsDisableBackupResponseBody201 = PostServersIdActionsDisableBackupResponseBody201 {
  -- | action
  postServersIdActionsDisableBackupResponseBody201Action :: PostServersIdActionsDisableBackupResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsDisableBackupResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsDisableBackupResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsDisableBackupResponseBody201" (\obj -> GHC.Base.pure PostServersIdActionsDisableBackupResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostServersIdActionsDisableBackupResponseBody201' with all required fields.
mkPostServersIdActionsDisableBackupResponseBody201 :: PostServersIdActionsDisableBackupResponseBody201Action -- ^ 'postServersIdActionsDisableBackupResponseBody201Action'
  -> PostServersIdActionsDisableBackupResponseBody201
mkPostServersIdActionsDisableBackupResponseBody201 postServersIdActionsDisableBackupResponseBody201Action = PostServersIdActionsDisableBackupResponseBody201{postServersIdActionsDisableBackupResponseBody201Action = postServersIdActionsDisableBackupResponseBody201Action}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/disable_backup.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostServersIdActionsDisableBackupResponseBody201Action = PostServersIdActionsDisableBackupResponseBody201Action {
  -- | command: Command executed in the Action
  postServersIdActionsDisableBackupResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postServersIdActionsDisableBackupResponseBody201ActionError :: (GHC.Maybe.Maybe PostServersIdActionsDisableBackupResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postServersIdActionsDisableBackupResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postServersIdActionsDisableBackupResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postServersIdActionsDisableBackupResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postServersIdActionsDisableBackupResponseBody201ActionResources :: ([PostServersIdActionsDisableBackupResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postServersIdActionsDisableBackupResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postServersIdActionsDisableBackupResponseBody201ActionStatus :: PostServersIdActionsDisableBackupResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsDisableBackupResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsDisableBackupResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsDisableBackupResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostServersIdActionsDisableBackupResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostServersIdActionsDisableBackupResponseBody201Action' with all required fields.
mkPostServersIdActionsDisableBackupResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostServersIdActionsDisableBackupResponseBody201ActionError -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionProgress'
  -> [PostServersIdActionsDisableBackupResponseBody201ActionResources] -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionStarted'
  -> PostServersIdActionsDisableBackupResponseBody201ActionStatus -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionStatus'
  -> PostServersIdActionsDisableBackupResponseBody201Action
mkPostServersIdActionsDisableBackupResponseBody201Action postServersIdActionsDisableBackupResponseBody201ActionCommand postServersIdActionsDisableBackupResponseBody201ActionError postServersIdActionsDisableBackupResponseBody201ActionFinished postServersIdActionsDisableBackupResponseBody201ActionId postServersIdActionsDisableBackupResponseBody201ActionProgress postServersIdActionsDisableBackupResponseBody201ActionResources postServersIdActionsDisableBackupResponseBody201ActionStarted postServersIdActionsDisableBackupResponseBody201ActionStatus = PostServersIdActionsDisableBackupResponseBody201Action{postServersIdActionsDisableBackupResponseBody201ActionCommand = postServersIdActionsDisableBackupResponseBody201ActionCommand,
postServersIdActionsDisableBackupResponseBody201ActionError = postServersIdActionsDisableBackupResponseBody201ActionError,
postServersIdActionsDisableBackupResponseBody201ActionFinished = postServersIdActionsDisableBackupResponseBody201ActionFinished,
postServersIdActionsDisableBackupResponseBody201ActionId = postServersIdActionsDisableBackupResponseBody201ActionId,
postServersIdActionsDisableBackupResponseBody201ActionProgress = postServersIdActionsDisableBackupResponseBody201ActionProgress,
postServersIdActionsDisableBackupResponseBody201ActionResources = postServersIdActionsDisableBackupResponseBody201ActionResources,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              postServersIdActionsDisableBackupResponseBody201ActionStarted = postServersIdActionsDisableBackupResponseBody201ActionStarted,
postServersIdActionsDisableBackupResponseBody201ActionStatus = postServersIdActionsDisableBackupResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/disable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostServersIdActionsDisableBackupResponseBody201ActionError = PostServersIdActionsDisableBackupResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postServersIdActionsDisableBackupResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postServersIdActionsDisableBackupResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsDisableBackupResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsDisableBackupResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsDisableBackupResponseBody201ActionError" (\obj -> (GHC.Base.pure PostServersIdActionsDisableBackupResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostServersIdActionsDisableBackupResponseBody201ActionError' with all required fields.
mkPostServersIdActionsDisableBackupResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionErrorMessage'
  -> PostServersIdActionsDisableBackupResponseBody201ActionError
mkPostServersIdActionsDisableBackupResponseBody201ActionError postServersIdActionsDisableBackupResponseBody201ActionErrorCode postServersIdActionsDisableBackupResponseBody201ActionErrorMessage = PostServersIdActionsDisableBackupResponseBody201ActionError{postServersIdActionsDisableBackupResponseBody201ActionErrorCode = postServersIdActionsDisableBackupResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                                               postServersIdActionsDisableBackupResponseBody201ActionErrorMessage = postServersIdActionsDisableBackupResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/disable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostServersIdActionsDisableBackupResponseBody201ActionResources = PostServersIdActionsDisableBackupResponseBody201ActionResources {
  -- | id: ID of the Resource
  postServersIdActionsDisableBackupResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postServersIdActionsDisableBackupResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsDisableBackupResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postServersIdActionsDisableBackupResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsDisableBackupResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsDisableBackupResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostServersIdActionsDisableBackupResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostServersIdActionsDisableBackupResponseBody201ActionResources' with all required fields.
mkPostServersIdActionsDisableBackupResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsDisableBackupResponseBody201ActionResourcesType'
  -> PostServersIdActionsDisableBackupResponseBody201ActionResources
mkPostServersIdActionsDisableBackupResponseBody201ActionResources postServersIdActionsDisableBackupResponseBody201ActionResourcesId postServersIdActionsDisableBackupResponseBody201ActionResourcesType = PostServersIdActionsDisableBackupResponseBody201ActionResources{postServersIdActionsDisableBackupResponseBody201ActionResourcesId = postServersIdActionsDisableBackupResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                                          postServersIdActionsDisableBackupResponseBody201ActionResourcesType = postServersIdActionsDisableBackupResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/servers\/{id}\/actions\/disable_backup.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostServersIdActionsDisableBackupResponseBody201ActionStatus =
   PostServersIdActionsDisableBackupResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostServersIdActionsDisableBackupResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsDisableBackupResponseBody201ActionStatus
    where toJSON (PostServersIdActionsDisableBackupResponseBody201ActionStatusOther val) = val
          toJSON (PostServersIdActionsDisableBackupResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsDisableBackupResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostServersIdActionsDisableBackupResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostServersIdActionsDisableBackupResponseBody201ActionStatusOther val)
-- | > POST /servers/{id}/actions/disable_backup
-- 
-- The same as 'postServers_Id_ActionsDisableBackup' but accepts an explicit configuration.
postServers_Id_ActionsDisableBackupWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response PostServersIdActionsDisableBackupResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsDisableBackupWithConfiguration config
                                                     id = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsDisableBackupResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsDisableBackupResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostServersIdActionsDisableBackupResponseBody201)
                                                                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/disable_backup"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/disable_backup
-- 
-- The same as 'postServers_Id_ActionsDisableBackup' but returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsDisableBackupRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsDisableBackupRaw id = GHC.Base.id (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/disable_backup"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/disable_backup
-- 
-- The same as 'postServers_Id_ActionsDisableBackup' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsDisableBackupWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsDisableBackupWithConfigurationRaw config
                                                        id = GHC.Base.id (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/disable_backup"))) GHC.Base.mempty)
