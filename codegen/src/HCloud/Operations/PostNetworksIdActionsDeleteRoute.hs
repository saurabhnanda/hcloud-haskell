-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postNetworks_Id_ActionsDeleteRoute
module HCloud.Operations.PostNetworksIdActionsDeleteRoute where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /networks/{id}/actions/delete_route
-- 
-- Delete a route entry from a Network.
-- 
-- Note: if the Network object changes during the request, the response will be a “conflict” error.
postNetworks_Id_ActionsDeleteRoute :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostNetworksIdActionsDeleteRouteResponse) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsDeleteRoute id
                                   body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostNetworksIdActionsDeleteRouteResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostNetworksIdActionsDeleteRouteResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     PostNetworksIdActionsDeleteRouteResponseBody201)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data PostNetworksIdActionsDeleteRouteRequestBody = PostNetworksIdActionsDeleteRouteRequestBody {
  -- | destination: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.
  postNetworksIdActionsDeleteRouteRequestBodyDestination :: Data.Text.Internal.Text
  -- | gateway: Gateway for the route. Cannot be the first IP of the networks ip_range, an IP behind a vSwitch or 172.31.1.1, as this IP is being used as a gateway for the public network interface of Servers.
  , postNetworksIdActionsDeleteRouteRequestBodyGateway :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("destination" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteRequestBodyDestination obj : "gateway" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteRequestBodyGateway obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("destination" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteRequestBodyDestination obj) GHC.Base.<> ("gateway" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteRequestBodyGateway obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsDeleteRouteRequestBody" (\obj -> (GHC.Base.pure PostNetworksIdActionsDeleteRouteRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "gateway"))
-- | Create a new 'PostNetworksIdActionsDeleteRouteRequestBody' with all required fields.
mkPostNetworksIdActionsDeleteRouteRequestBody :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteRequestBodyDestination'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteRequestBodyGateway'
  -> PostNetworksIdActionsDeleteRouteRequestBody
mkPostNetworksIdActionsDeleteRouteRequestBody postNetworksIdActionsDeleteRouteRequestBodyDestination postNetworksIdActionsDeleteRouteRequestBodyGateway = PostNetworksIdActionsDeleteRouteRequestBody{postNetworksIdActionsDeleteRouteRequestBodyDestination = postNetworksIdActionsDeleteRouteRequestBodyDestination,
                                                                                                                                                                                                      postNetworksIdActionsDeleteRouteRequestBodyGateway = postNetworksIdActionsDeleteRouteRequestBodyGateway}
-- | Represents a response of the operation 'postNetworks_Id_ActionsDeleteRoute'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostNetworksIdActionsDeleteRouteResponseError' is used.
data PostNetworksIdActionsDeleteRouteResponse =
   PostNetworksIdActionsDeleteRouteResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostNetworksIdActionsDeleteRouteResponse201 PostNetworksIdActionsDeleteRouteResponseBody201 -- ^ The \`action\` key contains the \`delete_route\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostNetworksIdActionsDeleteRouteResponseBody201 = PostNetworksIdActionsDeleteRouteResponseBody201 {
  -- | action
  postNetworksIdActionsDeleteRouteResponseBody201Action :: PostNetworksIdActionsDeleteRouteResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsDeleteRouteResponseBody201" (\obj -> GHC.Base.pure PostNetworksIdActionsDeleteRouteResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostNetworksIdActionsDeleteRouteResponseBody201' with all required fields.
mkPostNetworksIdActionsDeleteRouteResponseBody201 :: PostNetworksIdActionsDeleteRouteResponseBody201Action -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201Action'
  -> PostNetworksIdActionsDeleteRouteResponseBody201
mkPostNetworksIdActionsDeleteRouteResponseBody201 postNetworksIdActionsDeleteRouteResponseBody201Action = PostNetworksIdActionsDeleteRouteResponseBody201{postNetworksIdActionsDeleteRouteResponseBody201Action = postNetworksIdActionsDeleteRouteResponseBody201Action}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostNetworksIdActionsDeleteRouteResponseBody201Action = PostNetworksIdActionsDeleteRouteResponseBody201Action {
  -- | command: Command executed in the Action
  postNetworksIdActionsDeleteRouteResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postNetworksIdActionsDeleteRouteResponseBody201ActionError :: (GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postNetworksIdActionsDeleteRouteResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postNetworksIdActionsDeleteRouteResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postNetworksIdActionsDeleteRouteResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postNetworksIdActionsDeleteRouteResponseBody201ActionResources :: ([PostNetworksIdActionsDeleteRouteResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postNetworksIdActionsDeleteRouteResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postNetworksIdActionsDeleteRouteResponseBody201ActionStatus :: PostNetworksIdActionsDeleteRouteResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsDeleteRouteResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostNetworksIdActionsDeleteRouteResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostNetworksIdActionsDeleteRouteResponseBody201Action' with all required fields.
mkPostNetworksIdActionsDeleteRouteResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteResponseBody201ActionError -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionProgress'
  -> [PostNetworksIdActionsDeleteRouteResponseBody201ActionResources] -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionStarted'
  -> PostNetworksIdActionsDeleteRouteResponseBody201ActionStatus -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionStatus'
  -> PostNetworksIdActionsDeleteRouteResponseBody201Action
mkPostNetworksIdActionsDeleteRouteResponseBody201Action postNetworksIdActionsDeleteRouteResponseBody201ActionCommand postNetworksIdActionsDeleteRouteResponseBody201ActionError postNetworksIdActionsDeleteRouteResponseBody201ActionFinished postNetworksIdActionsDeleteRouteResponseBody201ActionId postNetworksIdActionsDeleteRouteResponseBody201ActionProgress postNetworksIdActionsDeleteRouteResponseBody201ActionResources postNetworksIdActionsDeleteRouteResponseBody201ActionStarted postNetworksIdActionsDeleteRouteResponseBody201ActionStatus = PostNetworksIdActionsDeleteRouteResponseBody201Action{postNetworksIdActionsDeleteRouteResponseBody201ActionCommand = postNetworksIdActionsDeleteRouteResponseBody201ActionCommand,
postNetworksIdActionsDeleteRouteResponseBody201ActionError = postNetworksIdActionsDeleteRouteResponseBody201ActionError,
postNetworksIdActionsDeleteRouteResponseBody201ActionFinished = postNetworksIdActionsDeleteRouteResponseBody201ActionFinished,
postNetworksIdActionsDeleteRouteResponseBody201ActionId = postNetworksIdActionsDeleteRouteResponseBody201ActionId,
postNetworksIdActionsDeleteRouteResponseBody201ActionProgress = postNetworksIdActionsDeleteRouteResponseBody201ActionProgress,
postNetworksIdActionsDeleteRouteResponseBody201ActionResources = postNetworksIdActionsDeleteRouteResponseBody201ActionResources,
postNetworksIdActionsDeleteRouteResponseBody201ActionStarted = postNetworksIdActionsDeleteRouteResponseBody201ActionStarted,
postNetworksIdActionsDeleteRouteResponseBody201ActionStatus = postNetworksIdActionsDeleteRouteResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostNetworksIdActionsDeleteRouteResponseBody201ActionError = PostNetworksIdActionsDeleteRouteResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsDeleteRouteResponseBody201ActionError" (\obj -> (GHC.Base.pure PostNetworksIdActionsDeleteRouteResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostNetworksIdActionsDeleteRouteResponseBody201ActionError' with all required fields.
mkPostNetworksIdActionsDeleteRouteResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage'
  -> PostNetworksIdActionsDeleteRouteResponseBody201ActionError
mkPostNetworksIdActionsDeleteRouteResponseBody201ActionError postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage = PostNetworksIdActionsDeleteRouteResponseBody201ActionError{postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode = postNetworksIdActionsDeleteRouteResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                                           postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage = postNetworksIdActionsDeleteRouteResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostNetworksIdActionsDeleteRouteResponseBody201ActionResources = PostNetworksIdActionsDeleteRouteResponseBody201ActionResources {
  -- | id: ID of the Resource
  postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostNetworksIdActionsDeleteRouteResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostNetworksIdActionsDeleteRouteResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostNetworksIdActionsDeleteRouteResponseBody201ActionResources' with all required fields.
mkPostNetworksIdActionsDeleteRouteResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType'
  -> PostNetworksIdActionsDeleteRouteResponseBody201ActionResources
mkPostNetworksIdActionsDeleteRouteResponseBody201ActionResources postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType = PostNetworksIdActionsDeleteRouteResponseBody201ActionResources{postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId = postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                                      postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType = postNetworksIdActionsDeleteRouteResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/networks\/{id}\/actions\/delete_route.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostNetworksIdActionsDeleteRouteResponseBody201ActionStatus =
   PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionStatus
    where toJSON (PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusOther val) = val
          toJSON (PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostNetworksIdActionsDeleteRouteResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostNetworksIdActionsDeleteRouteResponseBody201ActionStatusOther val)
-- | > POST /networks/{id}/actions/delete_route
-- 
-- The same as 'postNetworks_Id_ActionsDeleteRoute' but accepts an explicit configuration.
postNetworks_Id_ActionsDeleteRouteWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response PostNetworksIdActionsDeleteRouteResponse) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsDeleteRouteWithConfiguration config
                                                    id
                                                    body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostNetworksIdActionsDeleteRouteResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostNetworksIdActionsDeleteRouteResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PostNetworksIdActionsDeleteRouteResponseBody201)
                                                                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /networks/{id}/actions/delete_route
-- 
-- The same as 'postNetworks_Id_ActionsDeleteRoute' but returns the raw 'Data.ByteString.Char8.ByteString'.
postNetworks_Id_ActionsDeleteRouteRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsDeleteRouteRaw id
                                      body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /networks/{id}/actions/delete_route
-- 
-- The same as 'postNetworks_Id_ActionsDeleteRoute' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postNetworks_Id_ActionsDeleteRouteWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Network
  -> GHC.Maybe.Maybe PostNetworksIdActionsDeleteRouteRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postNetworks_Id_ActionsDeleteRouteWithConfigurationRaw config
                                                       id
                                                       body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/networks/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/delete_route"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
