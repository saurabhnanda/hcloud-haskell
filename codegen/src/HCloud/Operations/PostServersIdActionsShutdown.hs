-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postServers_Id_ActionsShutdown
module HCloud.Operations.PostServersIdActionsShutdown where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /servers/{id}/actions/shutdown
-- 
-- Shuts down a Server gracefully by sending an ACPI shutdown request. The Server operating system must support ACPI and react to the request, otherwise the Server will not shut down.
postServers_Id_ActionsShutdown :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostServersIdActionsShutdownResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsShutdown id = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsShutdownResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsShutdownResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostServersIdActionsShutdownResponseBody201)
                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/shutdown"))) GHC.Base.mempty)
-- | Represents a response of the operation 'postServers_Id_ActionsShutdown'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostServersIdActionsShutdownResponseError' is used.
data PostServersIdActionsShutdownResponse =
   PostServersIdActionsShutdownResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostServersIdActionsShutdownResponse201 PostServersIdActionsShutdownResponseBody201 -- ^ The \`action\` key in the reply contains an Action object with this structure
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/shutdown.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostServersIdActionsShutdownResponseBody201 = PostServersIdActionsShutdownResponseBody201 {
  -- | action
  postServersIdActionsShutdownResponseBody201Action :: PostServersIdActionsShutdownResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsShutdownResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsShutdownResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsShutdownResponseBody201" (\obj -> GHC.Base.pure PostServersIdActionsShutdownResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostServersIdActionsShutdownResponseBody201' with all required fields.
mkPostServersIdActionsShutdownResponseBody201 :: PostServersIdActionsShutdownResponseBody201Action -- ^ 'postServersIdActionsShutdownResponseBody201Action'
  -> PostServersIdActionsShutdownResponseBody201
mkPostServersIdActionsShutdownResponseBody201 postServersIdActionsShutdownResponseBody201Action = PostServersIdActionsShutdownResponseBody201{postServersIdActionsShutdownResponseBody201Action = postServersIdActionsShutdownResponseBody201Action}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/shutdown.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostServersIdActionsShutdownResponseBody201Action = PostServersIdActionsShutdownResponseBody201Action {
  -- | command: Command executed in the Action
  postServersIdActionsShutdownResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postServersIdActionsShutdownResponseBody201ActionError :: (GHC.Maybe.Maybe PostServersIdActionsShutdownResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postServersIdActionsShutdownResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postServersIdActionsShutdownResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postServersIdActionsShutdownResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postServersIdActionsShutdownResponseBody201ActionResources :: ([PostServersIdActionsShutdownResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postServersIdActionsShutdownResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postServersIdActionsShutdownResponseBody201ActionStatus :: PostServersIdActionsShutdownResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsShutdownResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsShutdownResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsShutdownResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostServersIdActionsShutdownResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostServersIdActionsShutdownResponseBody201Action' with all required fields.
mkPostServersIdActionsShutdownResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostServersIdActionsShutdownResponseBody201ActionError -- ^ 'postServersIdActionsShutdownResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postServersIdActionsShutdownResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postServersIdActionsShutdownResponseBody201ActionProgress'
  -> [PostServersIdActionsShutdownResponseBody201ActionResources] -- ^ 'postServersIdActionsShutdownResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionStarted'
  -> PostServersIdActionsShutdownResponseBody201ActionStatus -- ^ 'postServersIdActionsShutdownResponseBody201ActionStatus'
  -> PostServersIdActionsShutdownResponseBody201Action
mkPostServersIdActionsShutdownResponseBody201Action postServersIdActionsShutdownResponseBody201ActionCommand postServersIdActionsShutdownResponseBody201ActionError postServersIdActionsShutdownResponseBody201ActionFinished postServersIdActionsShutdownResponseBody201ActionId postServersIdActionsShutdownResponseBody201ActionProgress postServersIdActionsShutdownResponseBody201ActionResources postServersIdActionsShutdownResponseBody201ActionStarted postServersIdActionsShutdownResponseBody201ActionStatus = PostServersIdActionsShutdownResponseBody201Action{postServersIdActionsShutdownResponseBody201ActionCommand = postServersIdActionsShutdownResponseBody201ActionCommand,
postServersIdActionsShutdownResponseBody201ActionError = postServersIdActionsShutdownResponseBody201ActionError,
postServersIdActionsShutdownResponseBody201ActionFinished = postServersIdActionsShutdownResponseBody201ActionFinished,
postServersIdActionsShutdownResponseBody201ActionId = postServersIdActionsShutdownResponseBody201ActionId,
postServersIdActionsShutdownResponseBody201ActionProgress = postServersIdActionsShutdownResponseBody201ActionProgress,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            postServersIdActionsShutdownResponseBody201ActionResources = postServersIdActionsShutdownResponseBody201ActionResources,
postServersIdActionsShutdownResponseBody201ActionStarted = postServersIdActionsShutdownResponseBody201ActionStarted,
postServersIdActionsShutdownResponseBody201ActionStatus = postServersIdActionsShutdownResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/shutdown.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostServersIdActionsShutdownResponseBody201ActionError = PostServersIdActionsShutdownResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postServersIdActionsShutdownResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postServersIdActionsShutdownResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsShutdownResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsShutdownResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsShutdownResponseBody201ActionError" (\obj -> (GHC.Base.pure PostServersIdActionsShutdownResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostServersIdActionsShutdownResponseBody201ActionError' with all required fields.
mkPostServersIdActionsShutdownResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionErrorMessage'
  -> PostServersIdActionsShutdownResponseBody201ActionError
mkPostServersIdActionsShutdownResponseBody201ActionError postServersIdActionsShutdownResponseBody201ActionErrorCode postServersIdActionsShutdownResponseBody201ActionErrorMessage = PostServersIdActionsShutdownResponseBody201ActionError{postServersIdActionsShutdownResponseBody201ActionErrorCode = postServersIdActionsShutdownResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                           postServersIdActionsShutdownResponseBody201ActionErrorMessage = postServersIdActionsShutdownResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/servers\/{id}\/actions\/shutdown.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostServersIdActionsShutdownResponseBody201ActionResources = PostServersIdActionsShutdownResponseBody201ActionResources {
  -- | id: ID of the Resource
  postServersIdActionsShutdownResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postServersIdActionsShutdownResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsShutdownResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postServersIdActionsShutdownResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsShutdownResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostServersIdActionsShutdownResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostServersIdActionsShutdownResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostServersIdActionsShutdownResponseBody201ActionResources' with all required fields.
mkPostServersIdActionsShutdownResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postServersIdActionsShutdownResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postServersIdActionsShutdownResponseBody201ActionResourcesType'
  -> PostServersIdActionsShutdownResponseBody201ActionResources
mkPostServersIdActionsShutdownResponseBody201ActionResources postServersIdActionsShutdownResponseBody201ActionResourcesId postServersIdActionsShutdownResponseBody201ActionResourcesType = PostServersIdActionsShutdownResponseBody201ActionResources{postServersIdActionsShutdownResponseBody201ActionResourcesId = postServersIdActionsShutdownResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                      postServersIdActionsShutdownResponseBody201ActionResourcesType = postServersIdActionsShutdownResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/servers\/{id}\/actions\/shutdown.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostServersIdActionsShutdownResponseBody201ActionStatus =
   PostServersIdActionsShutdownResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostServersIdActionsShutdownResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostServersIdActionsShutdownResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostServersIdActionsShutdownResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostServersIdActionsShutdownResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostServersIdActionsShutdownResponseBody201ActionStatus
    where toJSON (PostServersIdActionsShutdownResponseBody201ActionStatusOther val) = val
          toJSON (PostServersIdActionsShutdownResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostServersIdActionsShutdownResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostServersIdActionsShutdownResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostServersIdActionsShutdownResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostServersIdActionsShutdownResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostServersIdActionsShutdownResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostServersIdActionsShutdownResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostServersIdActionsShutdownResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostServersIdActionsShutdownResponseBody201ActionStatusOther val)
-- | > POST /servers/{id}/actions/shutdown
-- 
-- The same as 'postServers_Id_ActionsShutdown' but accepts an explicit configuration.
postServers_Id_ActionsShutdownWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response PostServersIdActionsShutdownResponse) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsShutdownWithConfiguration config
                                                id = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostServersIdActionsShutdownResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostServersIdActionsShutdownResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        PostServersIdActionsShutdownResponseBody201)
                                                                                                                                                                                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/shutdown"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/shutdown
-- 
-- The same as 'postServers_Id_ActionsShutdown' but returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsShutdownRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Server
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsShutdownRaw id = GHC.Base.id (HCloud.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/shutdown"))) GHC.Base.mempty)
-- | > POST /servers/{id}/actions/shutdown
-- 
-- The same as 'postServers_Id_ActionsShutdown' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postServers_Id_ActionsShutdownWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Server
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postServers_Id_ActionsShutdownWithConfigurationRaw config
                                                   id = GHC.Base.id (HCloud.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/servers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/shutdown"))) GHC.Base.mempty)
