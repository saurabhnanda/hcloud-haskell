-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postLoadBalancers_Id_ActionsChangeType
module HCloud.Operations.PostLoadBalancersIdActionsChangeType where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /load_balancers/{id}/actions/change_type
-- 
-- Changes the type (Max Services, Max Targets and Max Connections) of a Load Balancer.
-- 
-- **Call specific error codes**
-- 
-- | Code                         | Description                                                     |
-- |------------------------------|-----------------------------------------------------------------|
-- | \`invalid_load_balancer_type\` | The Load Balancer type does not fit for the given Load Balancer |
postLoadBalancers_Id_ActionsChangeType :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsChangeTypeResponse) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsChangeType id
                                       body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsChangeTypeResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsChangeTypeResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 PostLoadBalancersIdActionsChangeTypeResponseBody201)
                                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_type"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsChangeTypeRequestBody = PostLoadBalancersIdActionsChangeTypeRequestBody {
  -- | load_balancer_type: ID or name of Load Balancer type the Load Balancer should migrate to
  postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("load_balancer_type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("load_balancer_type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeTypeRequestBody" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsChangeTypeRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "load_balancer_type"))
-- | Create a new 'PostLoadBalancersIdActionsChangeTypeRequestBody' with all required fields.
mkPostLoadBalancersIdActionsChangeTypeRequestBody :: Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType'
  -> PostLoadBalancersIdActionsChangeTypeRequestBody
mkPostLoadBalancersIdActionsChangeTypeRequestBody postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType = PostLoadBalancersIdActionsChangeTypeRequestBody{postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType = postLoadBalancersIdActionsChangeTypeRequestBodyLoadBalancerType}
-- | Represents a response of the operation 'postLoadBalancers_Id_ActionsChangeType'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostLoadBalancersIdActionsChangeTypeResponseError' is used.
data PostLoadBalancersIdActionsChangeTypeResponse =
   PostLoadBalancersIdActionsChangeTypeResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostLoadBalancersIdActionsChangeTypeResponse201 PostLoadBalancersIdActionsChangeTypeResponseBody201 -- ^ The \`action\` key contains the \`change_load_balancer_type\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsChangeTypeResponseBody201 = PostLoadBalancersIdActionsChangeTypeResponseBody201 {
  -- | action
  postLoadBalancersIdActionsChangeTypeResponseBody201Action :: PostLoadBalancersIdActionsChangeTypeResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeTypeResponseBody201" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsChangeTypeResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostLoadBalancersIdActionsChangeTypeResponseBody201' with all required fields.
mkPostLoadBalancersIdActionsChangeTypeResponseBody201 :: PostLoadBalancersIdActionsChangeTypeResponseBody201Action -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201Action'
  -> PostLoadBalancersIdActionsChangeTypeResponseBody201
mkPostLoadBalancersIdActionsChangeTypeResponseBody201 postLoadBalancersIdActionsChangeTypeResponseBody201Action = PostLoadBalancersIdActionsChangeTypeResponseBody201{postLoadBalancersIdActionsChangeTypeResponseBody201Action = postLoadBalancersIdActionsChangeTypeResponseBody201Action}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsChangeTypeResponseBody201Action = PostLoadBalancersIdActionsChangeTypeResponseBody201Action {
  -- | command: Command executed in the Action
  postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionError :: (GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources :: ([PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus :: PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeTypeResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostLoadBalancersIdActionsChangeTypeResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostLoadBalancersIdActionsChangeTypeResponseBody201Action' with all required fields.
mkPostLoadBalancersIdActionsChangeTypeResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress'
  -> [PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources] -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted'
  -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus'
  -> PostLoadBalancersIdActionsChangeTypeResponseBody201Action
mkPostLoadBalancersIdActionsChangeTypeResponseBody201Action postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand postLoadBalancersIdActionsChangeTypeResponseBody201ActionError postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished postLoadBalancersIdActionsChangeTypeResponseBody201ActionId postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus = PostLoadBalancersIdActionsChangeTypeResponseBody201Action{postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand = postLoadBalancersIdActionsChangeTypeResponseBody201ActionCommand,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionError = postLoadBalancersIdActionsChangeTypeResponseBody201ActionError,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished = postLoadBalancersIdActionsChangeTypeResponseBody201ActionFinished,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionId = postLoadBalancersIdActionsChangeTypeResponseBody201ActionId,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress = postLoadBalancersIdActionsChangeTypeResponseBody201ActionProgress,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources = postLoadBalancersIdActionsChangeTypeResponseBody201ActionResources,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted = postLoadBalancersIdActionsChangeTypeResponseBody201ActionStarted,
postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus = postLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError = PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError' with all required fields.
mkPostLoadBalancersIdActionsChangeTypeResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage'
  -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError
mkPostLoadBalancersIdActionsChangeTypeResponseBody201ActionError postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage = PostLoadBalancersIdActionsChangeTypeResponseBody201ActionError{postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode = postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                                                           postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage = postLoadBalancersIdActionsChangeTypeResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources = PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources {
  -- | id: ID of the Resource
  postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources' with all required fields.
mkPostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType'
  -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources
mkPostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType = PostLoadBalancersIdActionsChangeTypeResponseBody201ActionResources{postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId = postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                                                      postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType = postLoadBalancersIdActionsChangeTypeResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/load_balancers\/{id}\/actions\/change_type.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus =
   PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus
    where toJSON (PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusOther val) = val
          toJSON (PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostLoadBalancersIdActionsChangeTypeResponseBody201ActionStatusOther val)
-- | > POST /load_balancers/{id}/actions/change_type
-- 
-- The same as 'postLoadBalancers_Id_ActionsChangeType' but accepts an explicit configuration.
postLoadBalancers_Id_ActionsChangeTypeWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsChangeTypeResponse) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsChangeTypeWithConfiguration config
                                                        id
                                                        body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsChangeTypeResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsChangeTypeResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  PostLoadBalancersIdActionsChangeTypeResponseBody201)
                                                                                                                                                                                                                              | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_type"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/change_type
-- 
-- The same as 'postLoadBalancers_Id_ActionsChangeType' but returns the raw 'Data.ByteString.Char8.ByteString'.
postLoadBalancers_Id_ActionsChangeTypeRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsChangeTypeRaw id
                                          body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_type"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/change_type
-- 
-- The same as 'postLoadBalancers_Id_ActionsChangeType' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postLoadBalancers_Id_ActionsChangeTypeWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsChangeTypeRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsChangeTypeWithConfigurationRaw config
                                                           id
                                                           body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/change_type"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
