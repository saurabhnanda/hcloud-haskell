-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postLoadBalancers_Id_ActionsUpdateService
module HCloud.Operations.PostLoadBalancersIdActionsUpdateService where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified HCloud.Common
import HCloud.Types

-- | > POST /load_balancers/{id}/actions/update_service
-- 
-- Updates a Load Balancer Service.
-- 
-- \#\#\#\# Call specific error codes
-- 
-- | Code                       | Description                                             |
-- |----------------------------|---------------------------------------------------------|
-- | \`source_port_already_used\` | The source port you are trying to add is already in use |
postLoadBalancers_Id_ActionsUpdateService :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsUpdateServiceResponse) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsUpdateService id
                                          body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsUpdateServiceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsUpdateServiceResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          PostLoadBalancersIdActionsUpdateServiceResponseBody201)
                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/update_service"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsUpdateServiceRequestBody = PostLoadBalancersIdActionsUpdateServiceRequestBody {
  -- | destination_port: Port the Load Balancer will balance to
  postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort :: GHC.Types.Int
  -- | health_check: Service health check
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck :: PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck
  -- | http: Configuration option for protocols http and https
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHttp :: (GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp)
  -- | listen_port: Port the Load Balancer listens on
  , postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort :: GHC.Types.Int
  -- | protocol: Protocol of the Load Balancer
  , postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol :: PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocol
  -- | proxyprotocol: Is Proxyprotocol enabled or not
  , postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("destination_port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort obj : "health_check" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck obj : "http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttp obj : "listen_port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort obj : "protocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol obj : "proxyprotocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("destination_port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort obj) GHC.Base.<> (("health_check" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck obj) GHC.Base.<> (("http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttp obj) GHC.Base.<> (("listen_port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort obj) GHC.Base.<> (("protocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol obj) GHC.Base.<> ("proxyprotocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceRequestBody" (\obj -> (((((GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination_port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "health_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "http")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listen_port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "protocol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "proxyprotocol"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceRequestBody' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceRequestBody :: GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocol -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol'
  -> GHC.Types.Bool -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBody
mkPostLoadBalancersIdActionsUpdateServiceRequestBody postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol = PostLoadBalancersIdActionsUpdateServiceRequestBody{postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort = postLoadBalancersIdActionsUpdateServiceRequestBodyDestinationPort,
                                                                                                                                                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck,
                                                                                                                                                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceRequestBodyHttp = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort = postLoadBalancersIdActionsUpdateServiceRequestBodyListenPort,
                                                                                                                                                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol = postLoadBalancersIdActionsUpdateServiceRequestBodyProtocol,
                                                                                                                                                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol = postLoadBalancersIdActionsUpdateServiceRequestBodyProxyprotocol}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema.properties.health_check@ in the specification.
-- 
-- Service health check
data PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck = PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck {
  -- | http: Additional configuration for protocol http
  postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp :: (GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp)
  -- | interval: Time interval in seconds health checks are performed
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval :: GHC.Types.Int
  -- | port: Port the health check will be performed on
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort :: GHC.Types.Int
  -- | protocol: Type of the health check
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol :: PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol
  -- | retries: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries :: GHC.Types.Int
  -- | timeout: Time in seconds after an attempt is considered a timeout
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck
    where toJSON obj = Data.Aeson.Types.Internal.object ("http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp obj : "interval" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval obj : "port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort obj : "protocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol obj : "retries" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries obj : "timeout" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp obj) GHC.Base.<> (("interval" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval obj) GHC.Base.<> (("port" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort obj) GHC.Base.<> (("protocol" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol obj) GHC.Base.<> (("retries" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries obj) GHC.Base.<> ("timeout" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck" (\obj -> (((((GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "http")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "protocol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "retries")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeout"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck :: GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout = PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheck{postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckInterval,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckPort,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckRetries,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckTimeout}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema.properties.health_check.properties.http@ in the specification.
-- 
-- Additional configuration for protocol http
data PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp = PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp {
  -- | domain: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.
  postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | path: HTTP path to use for health checks
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath :: Data.Text.Internal.Text
  -- | response: String that must be contained in HTTP response in order to pass the health check
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpResponse :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | status_codes: List of returned HTTP status codes in order to pass the health check. Supports the wildcards \`?\` for exactly one character and \`*\` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpStatusCodes :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | tls: Use HTTPS for health check
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpTls :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp
    where toJSON obj = Data.Aeson.Types.Internal.object ("domain" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain obj : "path" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath obj : "response" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpResponse obj : "status_codes" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpStatusCodes obj : "tls" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpTls obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("domain" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain obj) GHC.Base.<> (("path" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath obj) GHC.Base.<> (("response" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpResponse obj) GHC.Base.<> (("status_codes" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpStatusCodes obj) GHC.Base.<> ("tls" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpTls obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp" (\obj -> ((((GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "domain")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "path")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "response")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "status_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tls"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp :: GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath = PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttp{postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpDomain,
                                                                                                                                                                                                                                                                                      postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath = postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpPath,
                                                                                                                                                                                                                                                                                      postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpResponse = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                      postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpStatusCodes = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                      postLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckHttpTls = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema.properties.health_check.properties.protocol@ in the specification.
-- 
-- Type of the health check
data PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol =
   PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumTcp -- ^ Represents the JSON value @"tcp"@
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumHttp -- ^ Represents the JSON value @"http"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol
    where toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolOther val) = val
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumTcp) = "tcp"
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumHttp) = "http"
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocol
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "tcp" -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumTcp
                                            | val GHC.Classes.== "http" -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolEnumHttp
                                            | GHC.Base.otherwise -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHealthCheckProtocolOther val)
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema.properties.http@ in the specification.
-- 
-- Configuration option for protocols http and https
data PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp = PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp {
  -- | certificates: IDs of the Certificates to use for TLS\/SSL termination by the Load Balancer; empty for TLS\/SSL passthrough or if \`protocol\` is \"http\"
  postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCertificates :: (GHC.Maybe.Maybe ([GHC.Types.Int]))
  -- | cookie_lifetime: Lifetime of the cookie used for sticky sessions
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime :: GHC.Types.Int
  -- | cookie_name: Name of the cookie used for sticky sessions
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName :: Data.Text.Internal.Text
  -- | redirect_http: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default \`false\`
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHttpRedirectHttp :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | sticky_sessions: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default \`false\`
  , postLoadBalancersIdActionsUpdateServiceRequestBodyHttpStickySessions :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp
    where toJSON obj = Data.Aeson.Types.Internal.object ("certificates" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCertificates obj : "cookie_lifetime" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime obj : "cookie_name" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName obj : "redirect_http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpRedirectHttp obj : "sticky_sessions" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpStickySessions obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("certificates" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCertificates obj) GHC.Base.<> (("cookie_lifetime" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime obj) GHC.Base.<> (("cookie_name" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName obj) GHC.Base.<> (("redirect_http" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpRedirectHttp obj) GHC.Base.<> ("sticky_sessions" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceRequestBodyHttpStickySessions obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp" (\obj -> ((((GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "certificates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cookie_lifetime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cookie_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "redirect_http")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sticky_sessions"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHttp :: GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName'
  -> PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp
mkPostLoadBalancersIdActionsUpdateServiceRequestBodyHttp postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName = PostLoadBalancersIdActionsUpdateServiceRequestBodyHttp{postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCertificates = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime = postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieLifetime,
                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName = postLoadBalancersIdActionsUpdateServiceRequestBodyHttpCookieName,
                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHttpRedirectHttp = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                        postLoadBalancersIdActionsUpdateServiceRequestBodyHttpStickySessions = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.requestBody.content.application\/json.schema.properties.protocol@ in the specification.
-- 
-- Protocol of the Load Balancer
data PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocol =
   PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumTcp -- ^ Represents the JSON value @"tcp"@
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttp -- ^ Represents the JSON value @"http"@
  | PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttps -- ^ Represents the JSON value @"https"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocol
    where toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolOther val) = val
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumTcp) = "tcp"
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttp) = "http"
          toJSON (PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttps) = "https"
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocol
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "tcp" -> PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumTcp
                                            | val GHC.Classes.== "http" -> PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttp
                                            | val GHC.Classes.== "https" -> PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolEnumHttps
                                            | GHC.Base.otherwise -> PostLoadBalancersIdActionsUpdateServiceRequestBodyProtocolOther val)
-- | Represents a response of the operation 'postLoadBalancers_Id_ActionsUpdateService'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostLoadBalancersIdActionsUpdateServiceResponseError' is used.
data PostLoadBalancersIdActionsUpdateServiceResponse =
   PostLoadBalancersIdActionsUpdateServiceResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostLoadBalancersIdActionsUpdateServiceResponse201 PostLoadBalancersIdActionsUpdateServiceResponseBody201 -- ^ The \`action\` key contains the \`update_service\` Action
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.responses.201.content.application\/json.schema@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsUpdateServiceResponseBody201 = PostLoadBalancersIdActionsUpdateServiceResponseBody201 {
  -- | action
  postLoadBalancersIdActionsUpdateServiceResponseBody201Action :: PostLoadBalancersIdActionsUpdateServiceResponseBody201Action
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201
    where toJSON obj = Data.Aeson.Types.Internal.object ("action" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201Action obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("action" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201Action obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceResponseBody201" (\obj -> GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceResponseBody201 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "action"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceResponseBody201' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201 :: PostLoadBalancersIdActionsUpdateServiceResponseBody201Action -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201Action'
  -> PostLoadBalancersIdActionsUpdateServiceResponseBody201
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201 postLoadBalancersIdActionsUpdateServiceResponseBody201Action = PostLoadBalancersIdActionsUpdateServiceResponseBody201{postLoadBalancersIdActionsUpdateServiceResponseBody201Action = postLoadBalancersIdActionsUpdateServiceResponseBody201Action}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.responses.201.content.application\/json.schema.properties.action@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsUpdateServiceResponseBody201Action = PostLoadBalancersIdActionsUpdateServiceResponseBody201Action {
  -- | command: Command executed in the Action
  postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand :: Data.Text.Internal.Text
  -- | error: Error message for the Action if error occurred, otherwise null
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError :: (GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError)
  -- | finished: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: ID of the Resource
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId :: GHC.Types.Int
  -- | progress: Progress of Action in percent
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress :: GHC.Types.Double
  -- | resources: Resources the Action relates to
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources :: ([PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources])
  -- | started: Point in time when the Action was started (in ISO-8601 format)
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted :: Data.Text.Internal.Text
  -- | status: Status of the Action
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus :: PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201Action
    where toJSON obj = Data.Aeson.Types.Internal.object ("command" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand obj : "error" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError obj : "finished" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished obj : "id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId obj : "progress" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress obj : "resources" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources obj : "started" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted obj : "status" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("command" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand obj) GHC.Base.<> (("error" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError obj) GHC.Base.<> (("finished" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId obj) GHC.Base.<> (("progress" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress obj) GHC.Base.<> (("resources" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources obj) GHC.Base.<> (("started" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted obj) GHC.Base.<> ("status" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201Action
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceResponseBody201Action" (\obj -> (((((((GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceResponseBody201Action GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "command")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "progress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "started")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceResponseBody201Action' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201Action :: Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand'
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError'
  -> GHC.Maybe.Maybe Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished'
  -> GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId'
  -> GHC.Types.Double -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress'
  -> [PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources] -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted'
  -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus'
  -> PostLoadBalancersIdActionsUpdateServiceResponseBody201Action
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201Action postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus = PostLoadBalancersIdActionsUpdateServiceResponseBody201Action{postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionCommand,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionError,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionFinished,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionId,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionProgress,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStarted,
postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.responses.201.content.application\/json.schema.properties.action.properties.error@ in the specification.
-- 
-- Error message for the Action if error occurred, otherwise null
data PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError = PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError {
  -- | code: Fixed machine readable code
  postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode :: Data.Text.Internal.Text
  -- | message: Humanized error message
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError
    where toJSON obj = Data.Aeson.Types.Internal.object ("code" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode obj : "message" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("code" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode obj) GHC.Base.<> ("message" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError :: Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage'
  -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage = PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionError{postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorCode,
                                                                                                                                                                                                                                                                                       postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionErrorMessage}
-- | Defines the object schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.responses.201.content.application\/json.schema.properties.action.properties.resources.items@ in the specification.
-- 
-- 
data PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources = PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources {
  -- | id: ID of the Resource
  postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId :: GHC.Types.Int
  -- | type: Type of resource referenced
  , postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId obj : "type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources" (\obj -> (GHC.Base.pure PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources' with all required fields.
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources :: GHC.Types.Int -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId'
  -> Data.Text.Internal.Text -- ^ 'postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType'
  -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources
mkPostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType = PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionResources{postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesId,
                                                                                                                                                                                                                                                                                                  postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType = postLoadBalancersIdActionsUpdateServiceResponseBody201ActionResourcesType}
-- | Defines the enum schema located at @paths.\/load_balancers\/{id}\/actions\/update_service.POST.responses.201.content.application\/json.schema.properties.action.properties.status@ in the specification.
-- 
-- Status of the Action
data PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus =
   PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumSuccess -- ^ Represents the JSON value @"success"@
  | PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumRunning -- ^ Represents the JSON value @"running"@
  | PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumError -- ^ Represents the JSON value @"error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus
    where toJSON (PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusOther val) = val
          toJSON (PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumSuccess) = "success"
          toJSON (PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumRunning) = "running"
          toJSON (PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumError) = "error"
instance Data.Aeson.Types.FromJSON.FromJSON PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "success" -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumSuccess
                                            | val GHC.Classes.== "running" -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumRunning
                                            | val GHC.Classes.== "error" -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusEnumError
                                            | GHC.Base.otherwise -> PostLoadBalancersIdActionsUpdateServiceResponseBody201ActionStatusOther val)
-- | > POST /load_balancers/{id}/actions/update_service
-- 
-- The same as 'postLoadBalancers_Id_ActionsUpdateService' but accepts an explicit configuration.
postLoadBalancers_Id_ActionsUpdateServiceWithConfiguration :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response PostLoadBalancersIdActionsUpdateServiceResponse) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsUpdateServiceWithConfiguration config
                                                           id
                                                           body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either PostLoadBalancersIdActionsUpdateServiceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> PostLoadBalancersIdActionsUpdateServiceResponse201 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           PostLoadBalancersIdActionsUpdateServiceResponseBody201)
                                                                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/update_service"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/update_service
-- 
-- The same as 'postLoadBalancers_Id_ActionsUpdateService' but returns the raw 'Data.ByteString.Char8.ByteString'.
postLoadBalancers_Id_ActionsUpdateServiceRaw :: forall m . HCloud.Common.MonadHTTP m => GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBody -- ^ The request body to send
  -> HCloud.Common.HttpT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsUpdateServiceRaw id
                                             body = GHC.Base.id (HCloud.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/update_service"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
-- | > POST /load_balancers/{id}/actions/update_service
-- 
-- The same as 'postLoadBalancers_Id_ActionsUpdateService' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postLoadBalancers_Id_ActionsUpdateServiceWithConfigurationRaw :: forall m . HCloud.Common.MonadHTTP m => HCloud.Common.Configuration -- ^ The configuration to use in the request
  -> GHC.Types.Int -- ^ id: ID of the Load Balancer
  -> GHC.Maybe.Maybe PostLoadBalancersIdActionsUpdateServiceRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postLoadBalancers_Id_ActionsUpdateServiceWithConfigurationRaw config
                                                              id
                                                              body = GHC.Base.id (HCloud.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/load_balancers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ HCloud.Common.stringifyModel id)) GHC.Base.++ "/actions/update_service"))) GHC.Base.mempty body HCloud.Common.RequestBodyEncodingJSON)
